"use client"
import Image from 'next/image'
import Head from "next/head";
import logo from '../assets/logo_blank.png'
import InputForm from '@/components/inputForm'
import ConclusionForm from '@/components/conclusionForm'
import { questions } from './questions'
import React,{ useState, useEffect  } from 'react'
import './globals.css'
import bg_background_image from '../assets/digital_marketing.jpg'


const Home = () => {
  let trashValue:string[]=[];

  const [answers, setAnswers] = useState(trashValue);
  const [completedInput, setCompletion] = useState(false);

  const [windowWidth, setWindowWidth] = useState((0));

  useEffect(() => {
    const handleResize = () => {
      setWindowWidth(window?.innerWidth);
    };

    if (typeof window !== 'undefined') {
      setWindowWidth(window?.innerWidth);
      window?.addEventListener('resize', handleResize);

      return () => {
        window?.removeEventListener('resize', handleResize);
      };
    }
  }, []);

  const updateAnswers = (newAnswer:string) => {
    setAnswers((prevAnswers) => [...prevAnswers, newAnswer]);
  };

  const inputCompletedFunc = (completionFlag:boolean) => {
    setCompletion(completionFlag);
  };

  const responsiveClassEditor = () => {
    if (windowWidth < 768) {
      return {
        isMobile: true,
        div0: 'h-screen',
        div1: 'shadow-2xl flex items-center justify-center bg-gradient-to-r from-[#5DE0E6] to-[#004AAD] h-1/6',
        div2: 'grid items-center',
        div3: 'col-span-1 flex items-center', 
        div5: 'shadow-2xl flex justify-center items-center bg-white h-5/6',
        imageHeight: 90,
        imageWidth: 66,
      };
    } else {
      return {
        isMobile: false,
        div0: 'flex flex-row h-screen',
        div1: 'flex justify-center items-center basis-2/5 bg-gradient-to-r from-[#5DE0E6] to-[#004AAD] h-full',
        div2: 'grid grid-rows-4 items-center',
        div3: 'row-span-3',
        div5: 'shadow-2xl flex justify-center items-center basis-3/5 bg-white h-full',
        imageHeight: 330,
        imageWidth: 250,
        lol: 'bg-[url("../assets/digital_marketing.jpg")]'
      };
    }
  };

  const { isMobile, div0, div1, div2, div3, div5, imageHeight, imageWidth } = responsiveClassEditor();

  const renderInput = () => {
    if (!completedInput) {
      return <InputForm isMobileFlag={isMobile} questionObj={questions} updateAnswers={updateAnswers} completionSignal={inputCompletedFunc} />;
    }
  };

  const renderCompletion = () => {
    if (completedInput) {
      return <ConclusionForm isMobileFlag={isMobile} questionObj={questions} answers={answers} />;
    }
  };

  return (
    <div id='a' className="">
      <Head>
        <meta name="Consultoria TXAI" content="Generated by create next app" />
        <link rel="icon" href='../assets/logo_blank.png' type="image/png"/>
      </Head>
      <div id='b' className={div0}>
        <div id='c' className={`${div1} rounded-r-2xl relative`}>
          {typeof window !== 'undefined' && (
            <Image
            className='rounded-r-2xl'
              src={bg_background_image}
              alt='Background Image'
              layout='fill'
              objectFit='cover'
              quality={100}
            />
          )}
          <div className='rounded-r-2xl absolute inset-0 bg-gradient-to-r from-[#5DE0E6] to-[#004AAD] opacity-80'></div>
          <div id='d' className={div2}>
            <div id='e' className={`${div3} relative z-10`}>
              {typeof window !== 'undefined' && (
                <Image src={logo} alt='TXAI Digital' height={imageHeight} width={imageWidth} />
              )}
            </div>
          </div>
        </div>
        <div className={div5}>
          {renderInput()}
          {renderCompletion()}
        </div>
      </div>
    </div>
  );
};

export default Home;
